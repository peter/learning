#!/usr/bin/env python3
#
# Examples:
#
# Get first character:
# echo 'foobar' | extract --index 0
#
# Split lines:
# extract --split --sep \\n "$(ps)"
# ps | extract --split --sep \\n
#
# Get second line:
# ps | extract --split --sep \\n --index 1
#
# Get second and third line:
# ps | extract --split --sep \\n --from 1 --to 3
#
# Get last line:
# ps | extract --split --sep \\n --from -1
#
# Get first column (process ID) in first row matching pattern "npm.*start":
# ps | extract --split --sep \\n --filter 'node.*start' --index 0 | extract --split --index 0

import argparse
import sys
import re

def arg_parser():
    parser = argparse.ArgumentParser(description='Describe structure of JSON document')
    parser.add_argument('--split', action='store_true', help='whether to split the input')
    parser.add_argument('--sep', default=' ', help='separator to split by')
    parser.add_argument('--index', type=int, default=None, help='index to return when using split')
    parser.add_argument('--from', type=int, default=None, help='start index to return when using split')
    parser.add_argument('--to', type=int, default=None, help='end index (exclusive) to return when using split')
    parser.add_argument('--filter', help='regex pattern to filter by when using split')
    parser.add_argument('text', nargs='?', help='text to select data from (can come from stdin)')
    return parser

def extract(args):
    result = args['text']
    if args['split']:
        result = [i.strip() for i in args['text'].split(args['sep']) if i.strip()]

    if args['filter'] and isinstance(result, list):
        result = [i for i in result if re.search(args['filter'], i)]

    if args['index'] != None:
        result = result[args['index']]
    elif args['from'] != None or args['to'] != None:
        result = result[args['from']:args['to']]

    if args['split'] and isinstance(result, list):
        result = args['sep'].join(result)

    return result

if __name__ == "__main__":
    args = vars(arg_parser().parse_args())
    if not args['text']:
        args['text'] = sys.stdin.read().rstrip("\r\n")
    if args['sep'] == '\\n':
        args['sep'] = "\n"
    print(extract(args))
